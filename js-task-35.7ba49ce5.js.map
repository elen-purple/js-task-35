{"mappings":"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","sources":["<anon>","src/index.js"],"sourcesContent":["var $35da740d59af89ba$exports = {};\nfunction $35da740d59af89ba$var$getStudents() {\n    return fetch(\"http://localhost:3000/students\").then((reponse)=>reponse.json());\n}\nfunction $35da740d59af89ba$var$renderStudents(students) {\n    document.querySelector(\"tbody\").innerHTML = \"\";\n    students.forEach((student)=>{\n        const status = student.isEnrolled ? \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0439\" : \"\\u041D\\u0435 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0439\";\n        const skills = student.skills.map((skill)=>`<li>${skill}</li>`).join(\"\");\n        document.querySelector(\"tbody\").insertAdjacentHTML(\"beforeend\", `<tr id=\"id-${student.id}\">\n        <td>${student.id}</td>\n        <td>${student.name}</td>\n        <td>${student.age}</td>\n        <td>${student.course}</td>\n        <td>\n          <ul>${skills}</ul>\n        </td>\n        <td>${student.email}</td>\n        <td>${status}</td>\n        <td>\n          <button data-action=\"change\" class=\"change-btn\">\\u{417}\\u{43C}\\u{456}\\u{43D}\\u{438}\\u{442}\\u{438}</button>\n          <button data-action=\"delete\" class=\"delete-btn\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n        </td>\n      </tr>`);\n    });\n}\nfunction $35da740d59af89ba$var$addStudent(e) {\n    e.preventDefault();\n    const student = {\n        name: document.querySelector(\"#name\").value,\n        course: document.querySelector(\"#course\").value,\n        age: document.querySelector(\"#age\").value,\n        skills: document.querySelector(\"#skills\").value.split(\",\").map((skill)=>skill.trim()),\n        email: document.querySelector(\"#email\").value,\n        isEnrolled: document.querySelector(\"#isEnrolled\").hasAttribute(\"checked\")\n    };\n    document.querySelector(\"#name\").value = \"\";\n    document.querySelector(\"#course\").value = \"\";\n    document.querySelector(\"#age\").value = \"\";\n    document.querySelector(\"#skills\").value = \"\";\n    document.querySelector(\"#email\").value = \"\";\n    fetch(\"http://localhost:3000/students\", {\n        method: \"POST\",\n        body: JSON.stringify(student),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    });\n    setTimeout(()=>{\n        $35da740d59af89ba$var$getStudents().then((students)=>{\n            $35da740d59af89ba$var$renderStudents(students);\n        });\n    }, 100);\n}\n// Функція для оновлення студента\nfunction $35da740d59af89ba$var$updateStudent(id) {\n// твій код\n}\n// Функція для видалення студента\nfunction $35da740d59af89ba$var$deleteStudent(id) {\n// твій код\n}\ndocument.querySelector(\"#get-students-btn\").addEventListener(\"click\", ()=>{\n    $35da740d59af89ba$var$getStudents().then((students)=>{\n        $35da740d59af89ba$var$renderStudents(students);\n    });\n});\ndocument.querySelectorAll(`input[type=\"checkbox\"]`).forEach((item)=>{\n    item.addEventListener(\"click\", (e)=>{\n        e.currentTarget.toggleAttribute(\"checked\");\n    });\n});\ndocument.querySelector(\"#add-student-form\").addEventListener(\"submit\", $35da740d59af89ba$var$addStudent);\nlet $35da740d59af89ba$var$changedUserId = \"\";\ndocument.querySelector(\"tbody\").addEventListener(\"click\", (e)=>{\n    if (e.target.classList.contains(\"change-btn\")) {\n        document.querySelector(\"#change\").classList.remove(\"is-hidden\");\n        document.querySelector(\"body\").classList.add(\"no-scroll\");\n        const studentId = e.target.parentElement.parentElement.firstElementChild.textContent;\n        $35da740d59af89ba$var$getStudents().then((students)=>{\n            const student = students.find((student)=>student.id === studentId);\n            $35da740d59af89ba$var$changedUserId = student.id;\n            document.querySelector(\"#change-name\").value = student.name;\n            document.querySelector(\"#change-course\").value = student.course;\n            document.querySelector(\"#change-age\").value = student.age;\n            document.querySelector(\"#change-skills\").value = student.skills.join(\", \");\n            document.querySelector(\"#change-email\").value = student.email;\n            if (student.isEnrolled) document.querySelector(\"#change-isEnrolled\").setAttribute(\"checked\", \"true\");\n        });\n    }\n});\ndocument.querySelector(\"#change-form\").addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const student = {\n        id: $35da740d59af89ba$var$changedUserId,\n        name: document.querySelector(\"#change-name\").value,\n        course: document.querySelector(\"#change-course\").value,\n        age: document.querySelector(\"#change-age\").value,\n        skills: document.querySelector(\"#change-skills\").value.split(\",\").map((skill)=>skill.trim()),\n        email: document.querySelector(\"#change-email\").value,\n        isEnrolled: document.querySelector(\"#change-isEnrolled\").hasAttribute(\"checked\")\n    };\n    const studentItem = document.querySelector(`#id-${$35da740d59af89ba$var$changedUserId}`);\n    studentItem.children[1].textContent = document.querySelector(\"#change-name\").value;\n    studentItem.children[2].textContent = document.querySelector(\"#change-age\").value;\n    studentItem.children[3].textContent = document.querySelector(\"#change-course\").value;\n    const skills = document.querySelector(\"#change-skills\").value.split(\",\").map((skill)=>`<li>${skill.trim()}</li>`).join(\"\");\n    studentItem.children[4].firstElementChild.innerHTML = skills;\n    studentItem.children[5].textContent = document.querySelector(\"#change-email\").value;\n    studentItem.children[6].textContent = student.isEnrolled ? \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0439\" : \"\\u041D\\u0435 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0439\";\n    document.querySelector(\"#change\").classList.add(\"is-hidden\");\n    document.querySelector(\"body\").classList.remove(\"no-scroll\");\n    document.querySelector(\"#change-name\").value = \"\";\n    document.querySelector(\"#change-course\").value = \"\";\n    document.querySelector(\"#change-age\").value = \"\";\n    document.querySelector(\"#change-skills\").value = \"\";\n    document.querySelector(\"#change-email\").value = \"\";\n    fetch(`http://localhost:3000/students/${$35da740d59af89ba$var$changedUserId}`, {\n        method: \"PUT\",\n        body: JSON.stringify(student),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    });\n});\ndocument.querySelector(\"tbody\").addEventListener(\"click\", (e)=>{\n    if (e.target.classList.contains(\"delete-btn\")) {\n        const studentId = e.target.parentElement.parentElement.firstElementChild.textContent;\n        document.querySelector(`#id-${studentId}`).remove();\n        fetch(`http://localhost:3000/students/${studentId}`, {\n            method: \"DELETE\"\n        });\n    }\n}); // 1. Реалізуйте функцію getStudents для отримання списку всіх студентів\n // (HTTP GET /students) getStudents\n // 2. Реалізуйте функцію addStudent для додавання нового студента (HTTP\n // POST /students)\n // 3. Реалізуйте функцію updateStudent  для часткового оновлення студента\n // (HTTP PATCH /students/{id})\n // 4. Реалізуйте функцію  для deleteStudent видалення студента за його\n // ідентифікатором (HTTP DELETE /students/{id})\n // 7. Написати JavaScript-код для обробки подій користувача.\n // 7.1. Додати обробники подій для кнопок, щоб вони виконували відповідні\n // HTTP-запити.\n // 7.2. При натисканні на кнопку \"Отримати студентів\" (GET), виконати\n // HTTP-запит GET /students і відобразити отримані дані в таблиці.\n // 7.3. Реалізувати форму для додавання нового студента. При натисканні\n // на кнопку \"Додати студента\" (POST), зібрати дані з полів вводу,\n // сформувати об'єкт з даними  і виконати HTTP-запит POST /students, щоб\n // додати нового студента до бази даних.\n // 7.4. Реалізувати можливість оновлення інформації про студента.\n // Для кожного студента в таблиці додати кнопку \"Оновити\". При натисканні\n // на цю кнопку, виконати HTTP-запит PUT /students/:id, де :id —\n // ідентифікатор фільму, і відправити оновлені дані про студента на сервер.\n // 7.5. Додати можливість видалення студента. Для кожного студента в\n // таблиці додати кнопку \"Видалити\". При натисканні на цю кнопку, виконати\n // HTTP-запит DELETE /students/:id.\n\n\n//# sourceMappingURL=js-task-35.7ba49ce5.js.map\n","function getStudents() {\r\n  return fetch(\"http://localhost:3000/students\").then((reponse) =>\r\n    reponse.json()\r\n  );\r\n}\r\n\r\nfunction renderStudents(students) {\r\n  document.querySelector(\"tbody\").innerHTML = \"\";\r\n  students.forEach((student) => {\r\n    const status = student.isEnrolled ? \"Записаний\" : \"Не записаний\";\r\n    const skills = student.skills.map((skill) => `<li>${skill}</li>`).join(\"\");\r\n    document.querySelector(\"tbody\").insertAdjacentHTML(\r\n      \"beforeend\",\r\n      `<tr id=\"id-${student.id}\">\r\n        <td>${student.id}</td>\r\n        <td>${student.name}</td>\r\n        <td>${student.age}</td>\r\n        <td>${student.course}</td>\r\n        <td>\r\n          <ul>${skills}</ul>\r\n        </td>\r\n        <td>${student.email}</td>\r\n        <td>${status}</td>\r\n        <td>\r\n          <button data-action=\"change\" class=\"change-btn\">Змінити</button>\r\n          <button data-action=\"delete\" class=\"delete-btn\">Видалити</button>\r\n        </td>\r\n      </tr>`\r\n    );\r\n  });\r\n}\r\n\r\nfunction addStudent(e) {\r\n  e.preventDefault();\r\n  const student = {\r\n    name: document.querySelector(\"#name\").value,\r\n    course: document.querySelector(\"#course\").value,\r\n    age: document.querySelector(\"#age\").value,\r\n    skills: document\r\n      .querySelector(\"#skills\")\r\n      .value.split(\",\")\r\n      .map((skill) => skill.trim()),\r\n    email: document.querySelector(\"#email\").value,\r\n    isEnrolled: document.querySelector(\"#isEnrolled\").hasAttribute(\"checked\"),\r\n  };\r\n  document.querySelector(\"#name\").value = \"\";\r\n  document.querySelector(\"#course\").value = \"\";\r\n  document.querySelector(\"#age\").value = \"\";\r\n  document.querySelector(\"#skills\").value = \"\";\r\n  document.querySelector(\"#email\").value = \"\";\r\n  fetch(\"http://localhost:3000/students\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(student),\r\n    headers: {\r\n      \"Content-Type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  });\r\n  setTimeout(() => {\r\n    getStudents().then((students) => {\r\n      renderStudents(students);\r\n    });\r\n  }, 100);\r\n}\r\n\r\n// Функція для оновлення студента\r\nfunction updateStudent(id) {\r\n  // твій код\r\n}\r\n\r\n// Функція для видалення студента\r\nfunction deleteStudent(id) {\r\n  // твій код\r\n}\r\n\r\ndocument.querySelector(\"#get-students-btn\").addEventListener(\"click\", () => {\r\n  getStudents().then((students) => {\r\n    renderStudents(students);\r\n  });\r\n});\r\n\r\ndocument.querySelectorAll(`input[type=\"checkbox\"]`).forEach((item) => {\r\n  item.addEventListener(\"click\", (e) => {\r\n    e.currentTarget.toggleAttribute(\"checked\");\r\n  });\r\n});\r\n\r\ndocument\r\n  .querySelector(\"#add-student-form\")\r\n  .addEventListener(\"submit\", addStudent);\r\n\r\nlet changedUserId = \"\";\r\n\r\ndocument.querySelector(\"tbody\").addEventListener(\"click\", (e) => {\r\n  if (e.target.classList.contains(\"change-btn\")) {\r\n    document.querySelector(\"#change\").classList.remove(\"is-hidden\");\r\n    document.querySelector(\"body\").classList.add(\"no-scroll\");\r\n    const studentId =\r\n      e.target.parentElement.parentElement.firstElementChild.textContent;\r\n    getStudents().then((students) => {\r\n      const student = students.find((student) => student.id === studentId);\r\n      changedUserId = student.id;\r\n      document.querySelector(\"#change-name\").value = student.name;\r\n      document.querySelector(\"#change-course\").value = student.course;\r\n      document.querySelector(\"#change-age\").value = student.age;\r\n      document.querySelector(\"#change-skills\").value =\r\n        student.skills.join(\", \");\r\n      document.querySelector(\"#change-email\").value = student.email;\r\n      if (student.isEnrolled) {\r\n        document\r\n          .querySelector(\"#change-isEnrolled\")\r\n          .setAttribute(\"checked\", \"true\");\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\ndocument.querySelector(\"#change-form\").addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  const student = {\r\n    id: changedUserId,\r\n    name: document.querySelector(\"#change-name\").value,\r\n    course: document.querySelector(\"#change-course\").value,\r\n    age: document.querySelector(\"#change-age\").value,\r\n    skills: document\r\n      .querySelector(\"#change-skills\")\r\n      .value.split(\",\")\r\n      .map((skill) => skill.trim()),\r\n    email: document.querySelector(\"#change-email\").value,\r\n    isEnrolled: document\r\n      .querySelector(\"#change-isEnrolled\")\r\n      .hasAttribute(\"checked\"),\r\n  };\r\n  const studentItem = document.querySelector(`#id-${changedUserId}`);\r\n  studentItem.children[1].textContent =\r\n    document.querySelector(\"#change-name\").value;\r\n  studentItem.children[2].textContent =\r\n    document.querySelector(\"#change-age\").value;\r\n  studentItem.children[3].textContent =\r\n    document.querySelector(\"#change-course\").value;\r\n  const skills = document\r\n    .querySelector(\"#change-skills\")\r\n    .value.split(\",\")\r\n    .map((skill) => `<li>${skill.trim()}</li>`)\r\n    .join(\"\");\r\n  studentItem.children[4].firstElementChild.innerHTML = skills;\r\n  studentItem.children[5].textContent =\r\n    document.querySelector(\"#change-email\").value;\r\n  studentItem.children[6].textContent = student.isEnrolled\r\n    ? \"Записаний\"\r\n    : \"Не записаний\";\r\n  document.querySelector(\"#change\").classList.add(\"is-hidden\");\r\n  document.querySelector(\"body\").classList.remove(\"no-scroll\");\r\n  document.querySelector(\"#change-name\").value = \"\";\r\n  document.querySelector(\"#change-course\").value = \"\";\r\n  document.querySelector(\"#change-age\").value = \"\";\r\n  document.querySelector(\"#change-skills\").value = \"\";\r\n  document.querySelector(\"#change-email\").value = \"\";\r\n  fetch(`http://localhost:3000/students/${changedUserId}`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify(student),\r\n    headers: {\r\n      \"Content-Type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  });\r\n});\r\n\r\ndocument.querySelector(\"tbody\").addEventListener(\"click\", (e) => {\r\n  if (e.target.classList.contains(\"delete-btn\")) {\r\n    const studentId =\r\n      e.target.parentElement.parentElement.firstElementChild.textContent;\r\n    document.querySelector(`#id-${studentId}`).remove();\r\n    fetch(`http://localhost:3000/students/${studentId}`, {\r\n      method: \"DELETE\",\r\n    });\r\n  }\r\n});\r\n\r\n// 1. Реалізуйте функцію getStudents для отримання списку всіх студентів\r\n// (HTTP GET /students) getStudents\r\n\r\n// 2. Реалізуйте функцію addStudent для додавання нового студента (HTTP\r\n// POST /students)\r\n\r\n// 3. Реалізуйте функцію updateStudent  для часткового оновлення студента\r\n// (HTTP PATCH /students/{id})\r\n\r\n// 4. Реалізуйте функцію  для deleteStudent видалення студента за його\r\n// ідентифікатором (HTTP DELETE /students/{id})\r\n\r\n// 7. Написати JavaScript-код для обробки подій користувача.\r\n\r\n// 7.1. Додати обробники подій для кнопок, щоб вони виконували відповідні\r\n// HTTP-запити.\r\n\r\n// 7.2. При натисканні на кнопку \"Отримати студентів\" (GET), виконати\r\n// HTTP-запит GET /students і відобразити отримані дані в таблиці.\r\n\r\n// 7.3. Реалізувати форму для додавання нового студента. При натисканні\r\n// на кнопку \"Додати студента\" (POST), зібрати дані з полів вводу,\r\n// сформувати об'єкт з даними  і виконати HTTP-запит POST /students, щоб\r\n// додати нового студента до бази даних.\r\n\r\n// 7.4. Реалізувати можливість оновлення інформації про студента.\r\n// Для кожного студента в таблиці додати кнопку \"Оновити\". При натисканні\r\n// на цю кнопку, виконати HTTP-запит PUT /students/:id, де :id —\r\n// ідентифікатор фільму, і відправити оновлені дані про студента на сервер.\r\n\r\n// 7.5. Додати можливість видалення студента. Для кожного студента в\r\n// таблиці додати кнопку \"Видалити\". При натисканні на цю кнопку, виконати\r\n// HTTP-запит DELETE /students/:id.\r\n"],"names":["$35da740d59af89ba$var$getStudents","fetch","then","reponse","json","$35da740d59af89ba$var$renderStudents","students","document","querySelector","innerHTML","forEach","student","status","isEnrolled","skills","map","skill","join","insertAdjacentHTML","id","name","age","course","email","addEventListener","querySelectorAll","item","e","currentTarget","toggleAttribute","preventDefault","value","split","trim","hasAttribute","method","body","JSON","stringify","headers","setTimeout","$35da740d59af89ba$var$changedUserId","target","classList","contains","remove","add","studentId","parentElement","firstElementChild","textContent","find","setAttribute","studentItem","children"],"version":3,"file":"js-task-35.7ba49ce5.js.map"}